{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/sankey.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as d3 from \"d3\";\n\nexport default function sankey() {\n  var sankey = {},\n      nodeWidth = 24,\n      nodePadding = 8,\n      size = [1, 1],\n      nodes = [],\n      links = [];\n\n  sankey.nodeWidth = function(_) {\n    if (!arguments.length) return nodeWidth;\n    nodeWidth = +_;\n    return sankey;\n  };\n\n  sankey.nodePadding = function(_) {\n    if (!arguments.length) return nodePadding;\n    nodePadding = +_;\n    return sankey;\n  };\n\n  sankey.nodes = function(_) {\n    if (!arguments.length) return nodes;\n    nodes = _;\n    return sankey;\n  };\n\n  sankey.links = function(_) {\n    if (!arguments.length) return links;\n    links = _;\n    return sankey;\n  };\n\n  sankey.size = function(_) {\n    if (!arguments.length) return size;\n    size = _;\n    return sankey;\n  };\n\n  sankey.layout = function(iterations) {\n    computeNodeLinks();\n    computeNodeValues();\n    computeNodeBreadths();\n    computeNodeDepths(iterations);\n    computeLinkDepths();\n    return sankey;\n  };\n\n  sankey.relayout = function() {\n    computeLinkDepths();\n    return sankey;\n  };\n\n  sankey.link = function() {\n    var curvature = .5;\n\n    function link(d) {\n      var x0 = d.source.x + d.source.dx,\n          x1 = d.target.x,\n          xi = d3.interpolateNumber(x0, x1),\n          x2 = xi(curvature),\n          x3 = xi(1 - curvature),\n          y0 = d.source.y + d.sy + d.dy / 2,\n          y1 = d.target.y + d.ty + d.dy / 2;\n      return \"M\" + x0 + \",\" + y0\n           + \"C\" + x2 + \",\" + y0\n           + \" \" + x3 + \",\" + y1\n           + \" \" + x1 + \",\" + y1;\n    }\n\n    link.curvature = function(_) {\n      if (!arguments.length) return curvature;\n      curvature = +_;\n      return link;\n    };\n\n    return link;\n  };\n\n  // Populate the sourceLinks and targetLinks for each node.\n  // Also, if the source and target are not objects, assume they are indices.\n  function computeNodeLinks() {\n    nodes.forEach(function(node) {\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    });\n    links.forEach(function(link) {\n      var source = link.source,\n          target = link.target;\n      if (typeof source === \"number\") source = link.source = nodes[link.source];\n      if (typeof target === \"number\") target = link.target = nodes[link.target];\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    });\n  }\n\n  // Compute the value (size) of each node by summing the associated links.\n  function computeNodeValues() {\n    nodes.forEach(function(node) {\n      node.value = Math.max(\n        d3.sum(node.sourceLinks, value),\n        d3.sum(node.targetLinks, value)\n      );\n    });\n  }\n\n  // Iteratively assign the breadth (x-position) for each node.\n  // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n  // nodes with no incoming links are assigned breadth zero, while\n  // nodes with no outgoing links are assigned the maximum breadth.\n  function computeNodeBreadths() {\n    var remainingNodes = nodes,\n        nextNodes,\n        x = 0;\n\n    while (remainingNodes.length) {\n      nextNodes = [];\n      remainingNodes.forEach(function(node) {\n        node.x = x;\n        node.dx = nodeWidth;\n        node.sourceLinks.forEach(function(link) {\n          if (nextNodes.indexOf(link.target) < 0) {\n            nextNodes.push(link.target);\n          }\n        });\n      });\n      remainingNodes = nextNodes;\n      ++x;\n    }\n\n    //\n    moveSinksRight(x);\n    scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n  }\n\n  function moveSourcesRight() {\n    nodes.forEach(function(node) {\n      if (!node.targetLinks.length) {\n        node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n      }\n    });\n  }\n\n  function moveSinksRight(x) {\n    nodes.forEach(function(node) {\n      if (!node.sourceLinks.length) {\n        node.x = x - 1;\n      }\n    });\n  }\n\n  function scaleNodeBreadths(kx) {\n    nodes.forEach(function(node) {\n      node.x *= kx;\n    });\n  }\n\n  function computeNodeDepths(iterations) {\n    var nodesByBreadth = d3.nest()\n        .key(function(d) { return d.x; })\n        .sortKeys(d3.ascending)\n        .entries(nodes)\n        .map(function(d) { return d.values; });\n\n    //\n    initializeNodeDepth();\n    resolveCollisions();\n    for (var alpha = 1; iterations > 0; --iterations) {\n      relaxRightToLeft(alpha *= .99);\n      resolveCollisions();\n      relaxLeftToRight(alpha);\n      resolveCollisions();\n    }\n\n    function initializeNodeDepth() {\n      var ky = d3.min(nodesByBreadth, function(nodes) {\n        return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n      });\n\n      nodesByBreadth.forEach(function(nodes) {\n        nodes.forEach(function(node, i) {\n          node.y = i;\n          node.dy = node.value * ky;\n        });\n      });\n\n      links.forEach(function(link) {\n        link.dy = link.value * ky;\n      });\n    }\n\n    function relaxLeftToRight(alpha) {\n      nodesByBreadth.forEach(function(nodes, breadth) {\n        nodes.forEach(function(node) {\n          if (node.targetLinks.length) {\n            var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n\n      function weightedSource(link) {\n        return center(link.source) * link.value;\n      }\n    }\n\n    function relaxRightToLeft(alpha) {\n      nodesByBreadth.slice().reverse().forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          if (node.sourceLinks.length) {\n            var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n\n      function weightedTarget(link) {\n        return center(link.target) * link.value;\n      }\n    }\n\n    function resolveCollisions() {\n      nodesByBreadth.forEach(function(nodes) {\n        var node,\n            dy,\n            y0 = 0,\n            n = nodes.length,\n            i;\n\n        // Push any overlapping nodes down.\n        nodes.sort(ascendingDepth);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dy = y0 - node.y;\n          if (dy > 0) node.y += dy;\n          y0 = node.y + node.dy + nodePadding;\n        }\n\n        // If the bottommost node goes outside the bounds, push it back up.\n        dy = y0 - nodePadding - size[1];\n        if (dy > 0) {\n          y0 = node.y -= dy;\n\n          // Push any overlapping nodes back up.\n          for (i = n - 2; i >= 0; --i) {\n            node = nodes[i];\n            dy = node.y + node.dy + nodePadding - y0;\n            if (dy > 0) node.y -= dy;\n            y0 = node.y;\n          }\n        }\n      });\n    }\n\n    function ascendingDepth(a, b) {\n      return a.y - b.y;\n    }\n  }\n\n  function computeLinkDepths() {\n    nodes.forEach(function(node) {\n      node.sourceLinks.sort(ascendingTargetDepth);\n      node.targetLinks.sort(ascendingSourceDepth);\n    });\n    nodes.forEach(function(node) {\n      var sy = 0, ty = 0;\n      node.sourceLinks.forEach(function(link) {\n        link.sy = sy;\n        sy += link.dy;\n      });\n      node.targetLinks.forEach(function(link) {\n        link.ty = ty;\n        ty += link.dy;\n      });\n    });\n\n    function ascendingSourceDepth(a, b) {\n      return a.source.y - b.source.y;\n    }\n\n    function ascendingTargetDepth(a, b) {\n      return a.target.y - b.target.y;\n    }\n  }\n\n  function center(node) {\n    return node.y + node.dy / 2;\n  }\n\n  function value(link) {\n    return link.value;\n  }\n\n  return sankey;\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles.css'\n\nimport * as d3 from \"d3\"\nimport sankeyFunction from \"./sankey.js\"\n\n//based off of this example: https://bl.ocks.org/GerardoFurtado/ff2096ed1aa29bb74fa151a39e9c1387\nexport default class Sankey extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    nodeWidth: PropTypes.number,\n    nodePadding: PropTypes.number,\n    iterations: PropTypes.number,\n    format: PropTypes.func,\n    textPaddingX: PropTypes.number,\n    textDy: PropTypes.string,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = this.processData();\n\n    this.dragNodeIndex = null;\n    this.dragStartNodeY = null;\n    this.dragStartMouseY = null;\n\n    this.startDrag = this.startDrag.bind(this);\n    this.endDrag = this.endDrag.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n  }\n\n  processData() {\n    const {\n      data,\n\n      width=700,\n      height=500,\n      nodeWidth=36,\n      nodePadding=40,\n      iterations=40,\n    } = this.props\n\n\n    // Set the sankey diagram properties\n    const sankey = sankeyFunction().nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n\n    const path = sankey.link();\n\n    sankey.nodes(data.nodes).links(data.links).layout(iterations);\n\n    return {path: path, sankey: sankey};\n  }\n\n  //begin dragging the rectangle\n  startDrag(e, nodeIndex) {\n    this.dragNodeIndex = nodeIndex; //mark which node we are dragging\n    this.dragStartNodeY = this.props.data.nodes[nodeIndex].y; //mark where the node started off\n    this.dragStartMouseY = e.screenY; //mark where our mouse started off\n  }\n\n  //end dragging the rectangle (mouse up in svg, mouse leaves svg)\n  endDrag(e) {\n    this.dragNodeIndex = null;\n    this.dragStartNodeY = null;\n    this.dragStartMouseY = null;\n  }\n\n  onMouseMove(e) {\n    //if we are in the middle of dragging\n    if(this.dragNodeIndex!==null && this.dragStartNodeY!==null && this.dragStartMouseY!==null) {\n      const desiredPosition = this.dragStartNodeY + e.screenY - this.dragStartMouseY; //the desired new node position is where it was originally placed, plus the difference in starting and current mouse positions\n\n      //restrict the dragging so that the node must remain within the svg\n      this.props.data.nodes[this.dragNodeIndex].y = Math.max( Math.min(desiredPosition, this.props.height-this.props.data.nodes[this.dragNodeIndex].dy), 0); //node must not exceed top of svg (y=0) or bottom of svg (y=height-node.dy)\n\n      this.setState({sankey: this.state.sankey.relayout()}); //set state to sankey after relayout\n    }\n  }\n\n\n\n  render() {\n    const {\n      data,\n\n      width=700,\n      height=500,\n      format=(d) => {return d},\n      textPaddingX=6,\n      textDy=\".35em\"\n    } = this.props\n\n\n    return (\n      <svg width={width} height={height} onMouseMove={this.onMouseMove} onMouseUp={this.endDrag} onMouseLeave={this.endDrag}>\n        <g>\n          {data.links.sort(function(a, b) { return b.dy - a.dy; }).map((link, i) => {\n            return (\n              <path key={i} className={styles.path} d={this.state.path(link)} strokeWidth={Math.max(1, link.dy)}>\n                <title>{link.source.name + \" → \" +  link.target.name + \"\\nlink has \" + format(link.value)}</title>\n              </path>\n            );\n          })}\n\n          {data.nodes.map((node, i) => {\n            const right = node.x < width/2; //true if the text should be to the right of the rect, else should be to left\n\n            return(\n              <g key={i} transform={\"translate(\" + node.x + \",\" + node.y + \")\"}>\n                <rect className={styles.nodeRect} height={node.dy} width={this.state.sankey.nodeWidth()} fill={node.color} stroke=\"gray\" onMouseDown={e => this.startDrag(e, i)}>\n                  <title>{node.name + \"\\nnode has \" + format(node.value)}</title>\n                </rect>\n\n                <text className={styles.nodeText} x={right ? textPaddingX+this.state.sankey.nodeWidth() : -textPaddingX} y={node.dy/2} dy={textDy} textAnchor={right ? \"start\" : \"end\"}>{node.name}</text>\n              </g>\n            );\n          })}\n        </g>\n      </svg>\n    )\n  }\n}\n"],"names":["sankey","nodeWidth","nodePadding","size","nodes","links","_","arguments","length","layout","iterations","relayout","link","curvature","d","x0","source","x","dx","x1","target","xi","d3","x2","x3","y0","y","sy","dy","y1","ty","computeNodeLinks","forEach","node","sourceLinks","targetLinks","push","computeNodeValues","value","Math","max","computeNodeBreadths","remainingNodes","nextNodes","indexOf","moveSinksRight","scaleNodeBreadths","kx","computeNodeDepths","nodesByBreadth","key","sortKeys","entries","map","values","alpha","initializeNodeDepth","ky","i","relaxLeftToRight","breadth","weightedSource","center","relaxRightToLeft","slice","reverse","weightedTarget","resolveCollisions","n","sort","ascendingDepth","a","b","computeLinkDepths","ascendingTargetDepth","ascendingSourceDepth","Sankey","props","state","processData","dragNodeIndex","dragStartNodeY","dragStartMouseY","startDrag","bind","endDrag","onMouseMove","data","width","height","sankeyFunction","path","e","nodeIndex","screenY","desiredPosition","min","setState","format","textPaddingX","textDy","React","styles","name","right","nodeRect","color","nodeText","Component","propTypes","PropTypes","object","isRequired","number","func","string"],"mappings":";;;;;;;;;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;EAC7B,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;EAC/B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;;EAE5B,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;;EAExD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAC5C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;;EAExB,IAAI,QAAQ,KAAK,KAAK,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3C,MAAM;MACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;GACF,MAAM;IACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;GACzB;;EAED,IAAI,KAAK,CAAC,UAAU,EAAE;IACpB,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;GAChC,MAAM;IACL,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD;CACF;;;;;;ACvBc,SAASA,MAAT,GAAkB;MAC3BA,SAAS,EAAb;MACIC,YAAY,EADhB;MAEIC,cAAc,CAFlB;MAGIC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAHX;MAIIC,QAAQ,EAJZ;MAKIC,QAAQ,EALZ;;SAOOJ,SAAP,GAAmB,UAASK,CAAT,EAAY;QACzB,CAACC,UAAUC,MAAf,EAAuB,OAAOP,SAAP;gBACX,CAACK,CAAb;WACON,MAAP;GAHF;;SAMOE,WAAP,GAAqB,UAASI,CAAT,EAAY;QAC3B,CAACC,UAAUC,MAAf,EAAuB,OAAON,WAAP;kBACT,CAACI,CAAf;WACON,MAAP;GAHF;;SAMOI,KAAP,GAAe,UAASE,CAAT,EAAY;QACrB,CAACC,UAAUC,MAAf,EAAuB,OAAOJ,KAAP;YACfE,CAAR;WACON,MAAP;GAHF;;SAMOK,KAAP,GAAe,UAASC,CAAT,EAAY;QACrB,CAACC,UAAUC,MAAf,EAAuB,OAAOH,KAAP;YACfC,CAAR;WACON,MAAP;GAHF;;SAMOG,IAAP,GAAc,UAASG,CAAT,EAAY;QACpB,CAACC,UAAUC,MAAf,EAAuB,OAAOL,IAAP;WAChBG,CAAP;WACON,MAAP;GAHF;;SAMOS,MAAP,GAAgB,UAASC,UAAT,EAAqB;;;;sBAIjBA,UAAlB;;WAEOV,MAAP;GANF;;SASOW,QAAP,GAAkB,YAAW;;WAEpBX,MAAP;GAFF;;SAKOY,IAAP,GAAc,YAAW;QACnBC,YAAY,EAAhB;;aAESD,IAAT,CAAcE,CAAd,EAAiB;UACXC,KAAKD,EAAEE,MAAF,CAASC,CAAT,GAAaH,EAAEE,MAAF,CAASE,EAA/B;UACIC,KAAKL,EAAEM,MAAF,CAASH,CADlB;UAEII,KAAKC,oBAAA,CAAqBP,EAArB,EAAyBI,EAAzB,CAFT;UAGII,KAAKF,GAAGR,SAAH,CAHT;UAIIW,KAAKH,GAAG,IAAIR,SAAP,CAJT;UAKIY,KAAKX,EAAEE,MAAF,CAASU,CAAT,GAAaZ,EAAEa,EAAf,GAAoBb,EAAEc,EAAF,GAAO,CALpC;UAMIC,KAAKf,EAAEM,MAAF,CAASM,CAAT,GAAaZ,EAAEgB,EAAf,GAAoBhB,EAAEc,EAAF,GAAO,CANpC;aAOO,MAAMb,EAAN,GAAW,GAAX,GAAiBU,EAAjB,GACA,GADA,GACMF,EADN,GACW,GADX,GACiBE,EADjB,GAEA,GAFA,GAEMD,EAFN,GAEW,GAFX,GAEiBK,EAFjB,GAGA,GAHA,GAGMV,EAHN,GAGW,GAHX,GAGiBU,EAHxB;;;SAMGhB,SAAL,GAAiB,UAASP,CAAT,EAAY;UACvB,CAACC,UAAUC,MAAf,EAAuB,OAAOK,SAAP;kBACX,CAACP,CAAb;aACOM,IAAP;KAHF;;WAMOA,IAAP;GAvBF;;;;WA4BSmB,gBAAT,GAA4B;UACpBC,OAAN,CAAc,UAASC,IAAT,EAAe;WACtBC,WAAL,GAAmB,EAAnB;WACKC,WAAL,GAAmB,EAAnB;KAFF;UAIMH,OAAN,CAAc,UAASpB,IAAT,EAAe;UACvBI,SAASJ,KAAKI,MAAlB;UACII,SAASR,KAAKQ,MADlB;UAEI,OAAOJ,MAAP,KAAkB,QAAtB,EAAgCA,SAASJ,KAAKI,MAAL,GAAcZ,MAAMQ,KAAKI,MAAX,CAAvB;UAC5B,OAAOI,MAAP,KAAkB,QAAtB,EAAgCA,SAASR,KAAKQ,MAAL,GAAchB,MAAMQ,KAAKQ,MAAX,CAAvB;aACzBc,WAAP,CAAmBE,IAAnB,CAAwBxB,IAAxB;aACOuB,WAAP,CAAmBC,IAAnB,CAAwBxB,IAAxB;KANF;;;;WAWOyB,iBAAT,GAA6B;UACrBL,OAAN,CAAc,UAASC,IAAT,EAAe;WACtBK,KAAL,GAAaC,KAAKC,GAAL,CACXlB,MAAA,CAAOW,KAAKC,WAAZ,EAAyBI,KAAzB,CADW,EAEXhB,MAAA,CAAOW,KAAKE,WAAZ,EAAyBG,KAAzB,CAFW,CAAb;KADF;;;;;;;WAYOG,mBAAT,GAA+B;QACzBC,iBAAiBtC,KAArB;QACIuC,SADJ;QAEI1B,IAAI,CAFR;;WAIOyB,eAAelC,MAAtB,EAA8B;kBAChB,EAAZ;qBACewB,OAAf,CAAuB,UAASC,IAAT,EAAe;aAC/BhB,CAAL,GAASA,CAAT;aACKC,EAAL,GAAUjB,SAAV;aACKiC,WAAL,CAAiBF,OAAjB,CAAyB,UAASpB,IAAT,EAAe;cAClC+B,UAAUC,OAAV,CAAkBhC,KAAKQ,MAAvB,IAAiC,CAArC,EAAwC;sBAC5BgB,IAAV,CAAexB,KAAKQ,MAApB;;SAFJ;OAHF;uBASiBuB,SAAjB;QACE1B,CAAF;;;;mBAIaA,CAAf;sBACkB,CAACd,KAAK,CAAL,IAAUF,SAAX,KAAyBgB,IAAI,CAA7B,CAAlB;;;WAWO4B,cAAT,CAAwB5B,CAAxB,EAA2B;UACnBe,OAAN,CAAc,UAASC,IAAT,EAAe;UACvB,CAACA,KAAKC,WAAL,CAAiB1B,MAAtB,EAA8B;aACvBS,CAAL,GAASA,IAAI,CAAb;;KAFJ;;;WAOO6B,iBAAT,CAA2BC,EAA3B,EAA+B;UACvBf,OAAN,CAAc,UAASC,IAAT,EAAe;WACtBhB,CAAL,IAAU8B,EAAV;KADF;;;WAKOC,iBAAT,CAA2BtC,UAA3B,EAAuC;QACjCuC,iBAAiB3B,OAAA,GAChB4B,GADgB,CACZ,UAASpC,CAAT,EAAY;aAASA,EAAEG,CAAT;KADF,EAEhBkC,QAFgB,CAEP7B,YAFO,EAGhB8B,OAHgB,CAGRhD,KAHQ,EAIhBiD,GAJgB,CAIZ,UAASvC,CAAT,EAAY;aAASA,EAAEwC,MAAT;KAJF,CAArB;;;;;SASK,IAAIC,QAAQ,CAAjB,EAAoB7C,aAAa,CAAjC,EAAoC,EAAEA,UAAtC,EAAkD;uBAC/B6C,SAAS,GAA1B;;uBAEiBA,KAAjB;;;;aAIOC,mBAAT,GAA+B;UACzBC,KAAKnC,MAAA,CAAO2B,cAAP,EAAuB,UAAS7C,KAAT,EAAgB;eACvC,CAACD,KAAK,CAAL,IAAU,CAACC,MAAMI,MAAN,GAAe,CAAhB,IAAqBN,WAAhC,IAA+CoB,MAAA,CAAOlB,KAAP,EAAckC,KAAd,CAAtD;OADO,CAAT;;qBAIeN,OAAf,CAAuB,UAAS5B,KAAT,EAAgB;cAC/B4B,OAAN,CAAc,UAASC,IAAT,EAAeyB,CAAf,EAAkB;eACzBhC,CAAL,GAASgC,CAAT;eACK9B,EAAL,GAAUK,KAAKK,KAAL,GAAamB,EAAvB;SAFF;OADF;;YAOMzB,OAAN,CAAc,UAASpB,IAAT,EAAe;aACtBgB,EAAL,GAAUhB,KAAK0B,KAAL,GAAamB,EAAvB;OADF;;;aAKOE,gBAAT,CAA0BJ,KAA1B,EAAiC;qBAChBvB,OAAf,CAAuB,UAAS5B,KAAT,EAAgBwD,OAAhB,EAAyB;cACxC5B,OAAN,CAAc,UAASC,IAAT,EAAe;cACvBA,KAAKE,WAAL,CAAiB3B,MAArB,EAA6B;gBACvBkB,IAAIJ,MAAA,CAAOW,KAAKE,WAAZ,EAAyB0B,cAAzB,IAA2CvC,MAAA,CAAOW,KAAKE,WAAZ,EAAyBG,KAAzB,CAAnD;iBACKZ,CAAL,IAAU,CAACA,IAAIoC,OAAO7B,IAAP,CAAL,IAAqBsB,KAA/B;;SAHJ;OADF;;eASSM,cAAT,CAAwBjD,IAAxB,EAA8B;eACrBkD,OAAOlD,KAAKI,MAAZ,IAAsBJ,KAAK0B,KAAlC;;;;aAIKyB,gBAAT,CAA0BR,KAA1B,EAAiC;qBAChBS,KAAf,GAAuBC,OAAvB,GAAiCjC,OAAjC,CAAyC,UAAS5B,KAAT,EAAgB;cACjD4B,OAAN,CAAc,UAASC,IAAT,EAAe;cACvBA,KAAKC,WAAL,CAAiB1B,MAArB,EAA6B;gBACvBkB,IAAIJ,MAAA,CAAOW,KAAKC,WAAZ,EAAyBgC,cAAzB,IAA2C5C,MAAA,CAAOW,KAAKC,WAAZ,EAAyBI,KAAzB,CAAnD;iBACKZ,CAAL,IAAU,CAACA,IAAIoC,OAAO7B,IAAP,CAAL,IAAqBsB,KAA/B;;SAHJ;OADF;;eASSW,cAAT,CAAwBtD,IAAxB,EAA8B;eACrBkD,OAAOlD,KAAKQ,MAAZ,IAAsBR,KAAK0B,KAAlC;;;;aAIK6B,iBAAT,GAA6B;qBACZnC,OAAf,CAAuB,UAAS5B,KAAT,EAAgB;YACjC6B,IAAJ;YACIL,EADJ;YAEIH,KAAK,CAFT;YAGI2C,IAAIhE,MAAMI,MAHd;YAIIkD,CAJJ;;;cAOMW,IAAN,CAAWC,cAAX;aACKZ,IAAI,CAAT,EAAYA,IAAIU,CAAhB,EAAmB,EAAEV,CAArB,EAAwB;iBACftD,MAAMsD,CAAN,CAAP;eACKjC,KAAKQ,KAAKP,CAAf;cACIE,KAAK,CAAT,EAAYK,KAAKP,CAAL,IAAUE,EAAV;eACPK,KAAKP,CAAL,GAASO,KAAKL,EAAd,GAAmB1B,WAAxB;;;;aAIGuB,KAAKvB,WAAL,GAAmBC,KAAK,CAAL,CAAxB;YACIyB,KAAK,CAAT,EAAY;eACLK,KAAKP,CAAL,IAAUE,EAAf;;;eAGK8B,IAAIU,IAAI,CAAb,EAAgBV,KAAK,CAArB,EAAwB,EAAEA,CAA1B,EAA6B;mBACpBtD,MAAMsD,CAAN,CAAP;iBACKzB,KAAKP,CAAL,GAASO,KAAKL,EAAd,GAAmB1B,WAAnB,GAAiCuB,EAAtC;gBACIG,KAAK,CAAT,EAAYK,KAAKP,CAAL,IAAUE,EAAV;iBACPK,KAAKP,CAAV;;;OA1BN;;;aAgCO4C,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;aACrBD,EAAE7C,CAAF,GAAM8C,EAAE9C,CAAf;;;;WAIK+C,iBAAT,GAA6B;UACrBzC,OAAN,CAAc,UAASC,IAAT,EAAe;WACtBC,WAAL,CAAiBmC,IAAjB,CAAsBK,oBAAtB;WACKvC,WAAL,CAAiBkC,IAAjB,CAAsBM,oBAAtB;KAFF;UAIM3C,OAAN,CAAc,UAASC,IAAT,EAAe;UACvBN,KAAK,CAAT;UAAYG,KAAK,CAAjB;WACKI,WAAL,CAAiBF,OAAjB,CAAyB,UAASpB,IAAT,EAAe;aACjCe,EAAL,GAAUA,EAAV;cACMf,KAAKgB,EAAX;OAFF;WAIKO,WAAL,CAAiBH,OAAjB,CAAyB,UAASpB,IAAT,EAAe;aACjCkB,EAAL,GAAUA,EAAV;cACMlB,KAAKgB,EAAX;OAFF;KANF;;aAYS+C,oBAAT,CAA8BJ,CAA9B,EAAiCC,CAAjC,EAAoC;aAC3BD,EAAEvD,MAAF,CAASU,CAAT,GAAa8C,EAAExD,MAAF,CAASU,CAA7B;;;aAGOgD,oBAAT,CAA8BH,CAA9B,EAAiCC,CAAjC,EAAoC;aAC3BD,EAAEnD,MAAF,CAASM,CAAT,GAAa8C,EAAEpD,MAAF,CAASM,CAA7B;;;;WAIKoC,MAAT,CAAgB7B,IAAhB,EAAsB;WACbA,KAAKP,CAAL,GAASO,KAAKL,EAAL,GAAU,CAA1B;;;WAGOU,KAAT,CAAe1B,IAAf,EAAqB;WACZA,KAAK0B,KAAZ;;;SAGKtC,MAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9RF;;IACqB4E;;;kBAcPC,KAAZ,EAAmB;;;+GACXA,KADW;;UAGZC,KAAL,GAAa,MAAKC,WAAL,EAAb;;UAEKC,aAAL,GAAqB,IAArB;UACKC,cAAL,GAAsB,IAAtB;UACKC,eAAL,GAAuB,IAAvB;;UAEKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;UACKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,OAAf;UACKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,OAAnB;;;;;;kCAGY;mBASR,KAAKP,KATG;UAEVU,IAFU,UAEVA,IAFU;gCAIVC,KAJU;UAIVA,KAJU,gCAIJ,GAJI;iCAKVC,MALU;UAKVA,MALU,iCAKH,GALG;oCAMVxF,SANU;UAMVA,SANU,oCAMA,EANA;sCAOVC,WAPU;UAOVA,WAPU,sCAOE,EAPF;qCAQVQ,UARU;UAQVA,UARU,qCAQC,EARD;;;;UAaNV,YAAS0F,SAAiBzF,SAAjB,CAA2BA,SAA3B,EAAsCC,WAAtC,CAAkDA,WAAlD,EAA+DC,IAA/D,CAAoE,CAACqF,KAAD,EAAQC,MAAR,CAApE,CAAf;;UAEME,OAAO3F,UAAOY,IAAP,EAAb;;gBAEOR,KAAP,CAAamF,KAAKnF,KAAlB,EAAyBC,KAAzB,CAA+BkF,KAAKlF,KAApC,EAA2CI,MAA3C,CAAkDC,UAAlD;;aAEO,EAACiF,MAAMA,IAAP,EAAa3F,QAAQA,SAArB,EAAP;;;;;;;8BAIQ4F,GAAGC,WAAW;WACjBb,aAAL,GAAqBa,SAArB,CADsB;WAEjBZ,cAAL,GAAsB,KAAKJ,KAAL,CAAWU,IAAX,CAAgBnF,KAAhB,CAAsByF,SAAtB,EAAiCnE,CAAvD,CAFsB;WAGjBwD,eAAL,GAAuBU,EAAEE,OAAzB,CAHsB;;;;;;;4BAOhBF,GAAG;WACJZ,aAAL,GAAqB,IAArB;WACKC,cAAL,GAAsB,IAAtB;WACKC,eAAL,GAAuB,IAAvB;;;;gCAGUU,GAAG;;UAEV,KAAKZ,aAAL,KAAqB,IAArB,IAA6B,KAAKC,cAAL,KAAsB,IAAnD,IAA2D,KAAKC,eAAL,KAAuB,IAArF,EAA2F;YACnFa,kBAAkB,KAAKd,cAAL,GAAsBW,EAAEE,OAAxB,GAAkC,KAAKZ,eAA/D,CADyF;;;aAIpFL,KAAL,CAAWU,IAAX,CAAgBnF,KAAhB,CAAsB,KAAK4E,aAA3B,EAA0CtD,CAA1C,GAA8Ca,KAAKC,GAAL,CAAUD,KAAKyD,GAAL,CAASD,eAAT,EAA0B,KAAKlB,KAAL,CAAWY,MAAX,GAAkB,KAAKZ,KAAL,CAAWU,IAAX,CAAgBnF,KAAhB,CAAsB,KAAK4E,aAA3B,EAA0CpD,EAAtF,CAAV,EAAqG,CAArG,CAA9C,CAJyF;;aAMpFqE,QAAL,CAAc,EAACjG,QAAQ,KAAK8E,KAAL,CAAW9E,MAAX,CAAkBW,QAAlB,EAAT,EAAd,EANyF;;;;;6BAYpF;;;oBASH,KAAKkE,KATF;UAELU,IAFK,WAELA,IAFK;kCAILC,KAJK;UAILA,KAJK,iCAIC,GAJD;mCAKLC,MALK;UAKLA,MALK,kCAKE,GALF;mCAMLS,MANK;UAMLA,MANK,kCAME,UAACpF,CAAD,EAAO;eAAQA,CAAP;OANV;yCAOLqF,YAPK;UAOLA,YAPK,wCAOQ,CAPR;mCAQLC,MARK;UAQLA,MARK,kCAQE,OARF;;;aAaLC;;UAAK,OAAOb,KAAZ,EAAmB,QAAQC,MAA3B,EAAmC,aAAa,KAAKH,WAArD,EAAkE,WAAW,KAAKD,OAAlF,EAA2F,cAAc,KAAKA,OAA9G;;;;eAEUhF,KAAL,CAAWgE,IAAX,CAAgB,UAASE,CAAT,EAAYC,CAAZ,EAAe;mBAASA,EAAE5C,EAAF,GAAO2C,EAAE3C,EAAhB;WAAjC,EAAwDyB,GAAxD,CAA4D,UAACzC,IAAD,EAAO8C,CAAP,EAAa;mBAEtE2C;;gBAAM,KAAK3C,CAAX,EAAc,WAAW4C,OAAOX,IAAhC,EAAsC,GAAG,OAAKb,KAAL,CAAWa,IAAX,CAAgB/E,IAAhB,CAAzC,EAAgE,aAAa2B,KAAKC,GAAL,CAAS,CAAT,EAAY5B,KAAKgB,EAAjB,CAA7E;;;;qBACeZ,MAAL,CAAYuF,IAAZ,GAAmB,KAAnB,GAA4B3F,KAAKQ,MAAL,CAAYmF,IAAxC,GAA+C,aAA/C,GAA+DL,OAAOtF,KAAK0B,KAAZ;;aAF3E;WADD,CADH;eASQlC,KAAL,CAAWiD,GAAX,CAAe,UAACpB,IAAD,EAAOyB,CAAP,EAAa;gBACrB8C,QAAQvE,KAAKhB,CAAL,GAASuE,QAAM,CAA7B,CAD2B;;mBAIzBa;;gBAAG,KAAK3C,CAAR,EAAW,WAAW,eAAezB,KAAKhB,CAApB,GAAwB,GAAxB,GAA8BgB,KAAKP,CAAnC,GAAuC,GAA7D;;;kBACQ,WAAW4E,OAAOG,QAAxB,EAAkC,QAAQxE,KAAKL,EAA/C,EAAmD,OAAO,OAAKkD,KAAL,CAAW9E,MAAX,CAAkBC,SAAlB,EAA1D,EAAyF,MAAMgC,KAAKyE,KAApG,EAA2G,QAAO,MAAlH,EAAyH,aAAa;2BAAK,OAAKvB,SAAL,CAAeS,CAAf,EAAkBlC,CAAlB,CAAL;mBAAtI;;;;uBACe6C,IAAL,GAAY,aAAZ,GAA4BL,OAAOjE,KAAKK,KAAZ;;eAFxC;;;kBAKQ,WAAWgE,OAAOK,QAAxB,EAAkC,GAAGH,QAAQL,eAAa,OAAKrB,KAAL,CAAW9E,MAAX,CAAkBC,SAAlB,EAArB,GAAqD,CAACkG,YAA3F,EAAyG,GAAGlE,KAAKL,EAAL,GAAQ,CAApH,EAAuH,IAAIwE,MAA3H,EAAmI,YAAYI,QAAQ,OAAR,GAAkB,KAAjK;qBAA8KD;;aANlL;WAHD;;OAXP;;;;EA1FgCK;;AAAfhC,OACZiC,YAAY;QACXC,UAAUC,MAAV,CAAiBC,UADN;;SAGVF,UAAUG,MAHA;UAITH,UAAUG,MAJD;aAKNH,UAAUG,MALJ;eAMJH,UAAUG,MANN;cAOLH,UAAUG,MAPL;UAQTH,UAAUI,IARD;gBASHJ,UAAUG,MATP;UAUTH,UAAUK;;;;;"}